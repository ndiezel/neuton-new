jQuery(function(r){var s=r(".js-header"),h=0;h=768<r(window).width()?40:20;var i=function(){r(".js-imgScrollParent").each(function(){var s=r(this),i=s.height(),o=s.offset().top,n=o+i,t=wTop+r(window).height()/100*s.data("screen-part"),d=s.find(".js-imgScrollLine"),c=d.width(),a=s.find(".js-imgScrollBody").width()-c,e=a/100*((t-o)/i*100).toFixed(2),l=s.find(".js-changeTop");o<t&&t<n&&(d.hasClass("right")?(d.css("right",e).find("div").css("right",0-e),d.position().left<0&&d.css("right",a).find("div").css("right",0-a)):(d.css("left",e).find("div").css("left",0-e),d.position().left>a&&d.css("left",a).find("div").css("left",0-a))),d.hasClass("right")?t<o?d.css("right",0).find("div").css("right",0):n<t&&d.css("right",a).find("div").css("right",0-a):t<o?d.css("left",0).find("div").css("left",0):n<t&&d.css("left",a).find("div").css("left",0-a);var f=h-a/e/4;0<f&&f<h?l.css("top",f+"%"):l.css("top",0)})};wTop=r(window).scrollTop(),i(),r(window).on("scroll",function(){wTop=r(window).scrollTop(),1<wTop?s.hasClass("fly")||s.addClass("fly"):s.removeClass("fly"),i()}),SmoothScroll({animationTime:1e3,stepSize:100,accelerationDelta:50,accelerationMax:3}),r(".js-headerMenuLink").on("click",function(){r(".js-header").toggleClass("menuOpened")}),r("#modalSuccess").on("shown.bs.modal",function(){r(".js-congAnim").attr("data","img/anim-congratilate.svg")}),r("#modalSuccess").on("hide.bs.modal",function(){r(".js-congAnim").attr("data","")})}),$(window).on("load",function(){$("body").addClass("loaded")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,

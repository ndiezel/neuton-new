jQuery(function(h){var s=h(".js-header"),i=function(){h(".js-imgScrollParent").each(function(){var s=h(this),i=s.height(),e=s.offset().top,t=e+i,o=wTop+h(window).height()/100*s.data("screen-part"),n=s.find(".js-imgScrollLine"),l=n.width(),c=s.find(".js-imgScrollBody").width(),f=c/100*((o-e)/i*100).toFixed(2),d=s.find(".js-changeTop");if(e<o&&o<t)if(n.hasClass("right"))n.css("right",f).find("div").css("right",0-f),n.position().left<0&&n.css("right",c-l).find("div").css("right",0-c+l);else if(n.css("left",f).find("div").css("left",0-f),n.position().left+l>c){var a=c-l;n.css("left",a).find("div").css("left",0-a)}n.hasClass("right")?o<e&&n.css("right",0).find("div").css("right",0):o<e?n.css("left",0).find("div").css("left",0):t<o&&n.css("left",c-l).find("div").css("left",0-c+l);var r=40-c/f/4;0<r&&r<40?d.css("top",r+"%"):d.css("top",0)})};wTop=h(window).scrollTop(),i(),h(window).on("scroll",function(){wTop=h(window).scrollTop(),1<wTop?s.hasClass("fly")||s.addClass("fly"):s.removeClass("fly"),i()}),SmoothScroll({animationTime:1e3,stepSize:100,accelerationDelta:50,accelerationMax:3}),h(".js-headerMenuLink").on("click",function(){h(".js-header").toggleClass("menuOpened")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
